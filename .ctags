-e
--exclude=.cask
--exclude=.ensime_cache
--exclude=.git
--exclude=target
--exclude=flycheck_*
--langdef=scala
--langmap=scala:.scala
--regex-scala=/\bclass\s+(\w+)/\1/c,classes/
--regex-scala=/\bobject\s+(\w+)/\1/c,objects/
--regex-scala=/\btrait\s+(\w+)/\1/t,traits/
--regex-scala=/\btype\s+(\w+)/\1/T,types/
--regex-scala=/\bdef\s+(\w+)/\1/m,methods/
--regex-scala=/\bval\s+(\w+)/\1/l,constants/
--regex-scala=/\bvar\s+(\w+)/\1/l,variables/
--regex-scala=/\bpackage\s+((\w|[.])+)/\1/p,packages/
--langdef=Clojure
--langmap=Clojure:.clj
--regex-clojure=/\([ \t]*create-ns[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/n,namespace/
--regex-clojure=/\([ \t]*def[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/d,definition/
--regex-clojure=/\([ \t]*defn[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/f,function/
--regex-clojure=/\([ \t]*defn-[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/p,private function/
--regex-clojure=/\([ \t]*defmacro[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/m,macro/
--regex-clojure=/\([ \t]*definline[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/i,inline/
--regex-clojure=/\([ \t]*defmulti[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/a,multimethod definition/
--regex-clojure=/\([ \t]*defmethod[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/b,multimethod instance/
--regex-clojure=/\([ \t]*defonce[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/c,definition (once)/
--regex-clojure=/\([ \t]*defstruct[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/s,struct/
--regex-clojure=/\([ \t]*intern[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/v,intern/
--regex-clojure=/\([ \t]*ns[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/n,namespace/
--languages=c,c++,java,scala,clojure,lisp,sh
